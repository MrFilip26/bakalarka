/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MonitorGUI.java
 *
 * Created on 19-May-2011, 19:57:57
 */
package sk.fiit.testframework.ui;

import java.awt.EventQueue;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.IOException;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.WindowConstants;

import sk.fiit.robocup.library.geometry.Circle;
import sk.fiit.robocup.library.geometry.Point3D;
import sk.fiit.robocup.library.geometry.Vector2;
import sk.fiit.testframework.annotator.Annotator;
import sk.fiit.testframework.communication.agent.AgentData;
import sk.fiit.testframework.communication.agent.AgentJim;
import sk.fiit.testframework.communication.agent.AgentJim.TeamSide;
import sk.fiit.testframework.communication.robocupserver.RobocupServer;
import sk.fiit.testframework.communication.robocupserver.RobocupServerAddress;
import sk.fiit.testframework.init.C;
import sk.fiit.testframework.init.Implementation;
import sk.fiit.testframework.init.ImplementationFactory;
import sk.fiit.testframework.monitor.RobocupMonitor;
import sk.fiit.testframework.trainer.testsuite.TestCase;
import sk.fiit.testframework.trainer.testsuite.TestCaseResult;
import sk.fiit.testframework.trainer.testsuite.testcases.WalkTestCase;
import sk.fiit.testframework.worldrepresentation.ISimulationStateObserver;
import sk.fiit.testframework.worldrepresentation.models.SimulationState;

/**
 * This code was edited or generated using CloudGarden's Jigloo
 * SWT/Swing GUI Builder, which is free for non-commercial
 * use. If Jigloo is being used commercially (ie, by a corporation,
 * company or business for any purpose whatever) then you
 * should purchase a license for each developer using Jigloo.
 * Please visit www.cloudgarden.com for details.
 * Use of Jigloo implies acceptance of these licensing terms.
 * A COMMERCIAL LICENSE HAS NOT BEEN PURCHASED FOR
 * THIS MACHINE, SO JIGLOO OR THIS CODE CANNOT BE USED
 * LEGALLY FOR ANY CORPORATE OR COMMERCIAL PURPOSE.
 */
/**
 * 
 * @author androids
 */
@Deprecated
public class MonitorGUI extends javax.swing.JFrame implements UserInterface,
		ISimulationStateObserver {

	private RobocupServerAddress serverAddress;
	private RobocupMonitor monitor;
	private RobocupServer trainer = null;
	private MeasurableInformation atStart;
	private boolean firstUpdate = true;
	private boolean isStopped = false;

	@Override
	public void start() {
		this.setVisible(true);

	}

	public void registerMonitor() {
		monitor.getSimulationState().registerObserver(this);
	}

	/**
	 * Creates new form MonitorGUI
	 * 
	 * @throws IOException
	 * @throws UnknownHostException
	 */
	public MonitorGUI(RobocupServerAddress robocupAddress) {
		this.serverAddress = robocupAddress;
		try {
			monitor = RobocupMonitor.getMonitorInstance(serverAddress);
			trainer = RobocupServer.getServerInstance(serverAddress);
		} catch (Exception e) {
			e.printStackTrace();
		}
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jScrollPane1 = new javax.swing.JScrollPane();
		jtaSimInfo = new javax.swing.JTextArea();
		jLabel1 = new javax.swing.JLabel();
		jPanel1 = new javax.swing.JPanel();
		jbtnStart = new javax.swing.JButton();
		jbtnStop = new javax.swing.JButton();
		jbtnConnect = new javax.swing.JButton();
		jbtnSetBall = new javax.swing.JButton();
		jtfBallPos = new javax.swing.JTextField();
		jtfAgentPos = new javax.swing.JTextField();
		jbtnAgent = new javax.swing.JButton();
		jtfAgentNum = new javax.swing.JTextField();
		jbtnClose = new javax.swing.JButton();
		jPanel2 = new javax.swing.JPanel();
		jLabel4 = new javax.swing.JLabel();
		jtfIP = new javax.swing.JTextField();
		jbtnAnnot = new javax.swing.JButton();

		setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

		this.addWindowListener(new WindowAdapter() {
			public void windowClosing(WindowEvent e) {
				ImplementationFactory.getImplementationInstance().exit();
			}
		});

		jtaSimInfo.setColumns(20);
		jtaSimInfo.setRows(5);
		jScrollPane1.setViewportView(jtaSimInfo);

		jLabel1.setText("Simulation information:");

		jPanel1.setBorder(javax.swing.BorderFactory
				.createTitledBorder("Controller"));

		jbtnStart.setText("Start");
		jbtnStart.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jbtnStartActionPerformed(evt);
			}
		});

		jbtnStop.setText("Stop");
		jbtnStop.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jbtnStopActionPerformed(evt);
			}
		});

		jbtnConnect.setText("Connect");
		jbtnConnect.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jbtnConnectActionPerformed(evt);
			}
		});

		jbtnSetBall.setText("Set ball");
		jbtnSetBall.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jbtnSetBallActionPerformed(evt);
			}
		});

		jbtnAnnot.setText("Annotate");
		jbtnAnnot.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jbtnAnnotActionPerformed(evt);
			}
		});

		jtfBallPos.setText("0:0:0.4");

		jtfAgentPos.setText("0:0:0.2");

		jbtnAgent.setText("Set agent");
		jbtnAgent.setEnabled(false);
		jbtnAgent.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jbtnAgentActionPerformed(evt);
			}
		});

		jtfAgentNum.setText("1");

		jbtnClose.setText("Close");
		jbtnClose.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jbtnCloseActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(
				jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout
				.setHorizontalGroup(jPanel1Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel1Layout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												jPanel1Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(
																jbtnClose,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																241,
																Short.MAX_VALUE)
														.addGroup(
																jPanel1Layout
																		.createSequentialGroup()
																		.addGroup(
																				jPanel1Layout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.LEADING)
																						.addGroup(
																								jPanel1Layout
																										.createSequentialGroup()
																										.addComponent(
																												jtfAgentNum,
																												javax.swing.GroupLayout.PREFERRED_SIZE,
																												56,
																												javax.swing.GroupLayout.PREFERRED_SIZE)
																										.addPreferredGap(
																												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																										.addComponent(
																												jtfAgentPos,
																												javax.swing.GroupLayout.DEFAULT_SIZE,
																												92,
																												Short.MAX_VALUE))
																						.addComponent(
																								jbtnAgent,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								154,
																								Short.MAX_VALUE)
																						.addComponent(
																								jbtnSetBall,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								154,
																								Short.MAX_VALUE)
																						.addComponent(
																								jtfBallPos,
																								javax.swing.GroupLayout.Alignment.TRAILING,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								154,
																								Short.MAX_VALUE))
																		.addGap(18,
																				18,
																				18)
																		.addGroup(
																				jPanel1Layout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.LEADING,
																								false)
																						.addComponent(
																								jbtnStart,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								69,
																								Short.MAX_VALUE)
																						.addComponent(
																								jbtnStop,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								69,
																								Short.MAX_VALUE)
																						.addComponent(
																								jbtnAnnot,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								69,
																								Short.MAX_VALUE)
																						.addComponent(
																								jbtnConnect,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								Short.MAX_VALUE))))
										.addContainerGap()));
		jPanel1Layout
				.setVerticalGroup(jPanel1Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel1Layout
										.createSequentialGroup()
										.addGroup(
												jPanel1Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(
																jPanel1Layout
																		.createSequentialGroup()
																		.addGroup(
																				jPanel1Layout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.BASELINE)
																						.addComponent(
																								jtfAgentNum,
																								javax.swing.GroupLayout.PREFERRED_SIZE,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								javax.swing.GroupLayout.PREFERRED_SIZE)
																						.addComponent(
																								jtfAgentPos,
																								javax.swing.GroupLayout.PREFERRED_SIZE,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								javax.swing.GroupLayout.PREFERRED_SIZE))
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				jbtnAgent)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				jtfBallPos,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				jbtnSetBall))
														.addGroup(
																jPanel1Layout
																		.createSequentialGroup()
																		.addComponent(
																				jbtnConnect)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				jbtnStart)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				jbtnStop)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				jbtnAnnot)))
										.addGap(105, 105, 105)
										.addComponent(jbtnClose)
										.addContainerGap()));

		jPanel2.setBorder(javax.swing.BorderFactory
				.createTitledBorder("Settings"));

		jLabel4.setText("IP:");

		jtfIP.setText(C.getProperty(C.PROPERTIES_ROBOCUP_SERVER_IP));

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(
				jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout
				.setHorizontalGroup(jPanel2Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel2Layout
										.createSequentialGroup()
										.addContainerGap()
										.addComponent(jLabel4)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												jtfIP,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												219, Short.MAX_VALUE)
										.addContainerGap()));
		jPanel2Layout
				.setVerticalGroup(jPanel2Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel2Layout
										.createSequentialGroup()
										.addGroup(
												jPanel2Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(jLabel4)
														.addComponent(
																jtfIP,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addContainerGap(
												javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(jLabel1)
												.addComponent(
														jScrollPane1,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														350, Short.MAX_VALUE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING,
												false)
												.addComponent(
														jPanel1,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														Short.MAX_VALUE)
												.addComponent(
														jPanel2,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														Short.MAX_VALUE))
								.addContainerGap()));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		jPanel2,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jPanel1,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		Short.MAX_VALUE))
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		jLabel1)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jScrollPane1,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		322,
																		Short.MAX_VALUE)))
								.addContainerGap()));

		pack();
		this.setSize(654, 474);
	}// </editor-fold>//GEN-END:initComponents

	private void jbtnConnectActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jbtnConnectActionPerformed
		registerMonitor();
	}// GEN-LAST:event_jbtnConnectActionPerformed

	private void jbtnStartActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jbtnStartActionPerformed
		firstUpdate = true;
		isStopped = false;
		jbtnStop.requestFocusInWindow();

		Implementation impl = ImplementationFactory.getImplementationInstance();

		TestCase testCase = new WalkTestCase();
		impl.enqueueTestCase(testCase, null);

	}// GEN-LAST:event_jbtnStartActionPerformed

	private void jbtnStopActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jbtnStopActionPerformed
		jbtnStart.requestFocusInWindow();
		isStopped = true;
	}// GEN-LAST:event_jbtnStopActionPerformed

	private Point3D getPoint3D(String text) {
		String[] split = jtfBallPos.getText().split(":");
		if (split.length != 3) {
			System.out.println("split fail");
		}
		double x = new Double(split[0]).doubleValue();
		double y = new Double(split[1]).doubleValue();
		double z = new Double(split[2]).doubleValue();
		return new Point3D(x, y, z);
	}

	private void jbtnSetBallActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jbtnSetBallActionPerformed
		try {
			trainer.setBallPosition(getPoint3D(jtfBallPos.getText()));
		} catch (IOException ex) {
			Logger.getLogger(MonitorGUI.class.getName()).log(Level.SEVERE,
					null, ex);
		}
	}// GEN-LAST:event_jbtnSetBallActionPerformed

	private void jbtnAgentActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jbtnAgentActionPerformed
		AgentJim aj = null;

		aj = new AgentJim(new AgentData(1, TeamSide.LEFT, "ANDROIDS"), "localhost", 3070);

		try {
			trainer.setAgentPosition(aj.getAgentData(),
					getPoint3D(jtfAgentPos.getText()));
		} catch (Exception ex) {
			Logger.getLogger(MonitorGUI.class.getName()).log(Level.SEVERE,
					null, ex);
		}
	}// GEN-LAST:event_jbtnAgentActionPerformed

	private void jbtnCloseActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jbtnCloseActionPerformed
		this.dispose();
		ImplementationFactory.getImplementationInstance().exit();
	}// GEN-LAST:event_jbtnCloseActionPerformed

	private void jbtnAnnotActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jbtnStartActionPerformed
		Circle ballInits = new Circle(new Vector2(0.19, -0.01), 0.01);
		Annotator anot = new Annotator(1, ballInits, "kick_right", new File(
				"./annotation/"));
		anot.annotate();

	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JButton jbtnAgent;
	private javax.swing.JButton jbtnClose;
	private javax.swing.JButton jbtnConnect;
	private javax.swing.JButton jbtnSetBall;
	private javax.swing.JButton jbtnStart;
	private javax.swing.JButton jbtnStop;
	private javax.swing.JButton jbtnAnnot;
	private javax.swing.JTextArea jtaSimInfo;
	private javax.swing.JTextField jtfAgentNum;
	private javax.swing.JTextField jtfAgentPos;
	private javax.swing.JTextField jtfBallPos;
	private javax.swing.JTextField jtfIP;

	// End of variables declaration//GEN-END:variables

	private String format(double d) {
		return String.format("%.3f", d);
	}

	@Override
	public void update() {

		if (isStopped) {
			return;
		}

		if (firstUpdate) {
			atStart = new MeasurableInformation(monitor.getSimulationState());
			firstUpdate = false;
		}

		EventQueue.invokeLater(new Runnable() {
			@Override
			public void run() {
				SimulationState ss = monitor.getSimulationState();
				MeasurableInformation now = new MeasurableInformation(ss);
				MeasurableInformation dist = MeasurableInformation
						.createDistanceInformation(now, atStart);

				StringBuilder sbInfo = new StringBuilder();
				sbInfo.append("General\n=======\n");
				sbInfo.append("Time start: ").append(format(atStart.time))
						.append("\n");
				sbInfo.append("Time now: ").append(format(now.time))
						.append("\n");
				sbInfo.append("Time passed: ").append(format(dist.time))
						.append("\n\n");

				sbInfo.append("Ball\n======\n");
				sbInfo.append("At start: ")
						.append(atStart.ballPosition.toString()).append("\n");
				sbInfo.append("Now: ").append(now.ballPosition.toString())
						.append("\n");
				sbInfo.append("Dist: ").append(dist.ballPosition.toString())
						.append("\n");
				sbInfo.append("2D Dist: ")
						.append(atStart.ballPosition
								.getXYDistanceFrom(now.ballPosition))
						.append("\n\n");

				sbInfo.append("Agent\n======\n");
				sbInfo.append("At start: ")
						.append(atStart.agentPosition.toString()).append("\n");
				sbInfo.append("Now: ").append(now.agentPosition.toString())
						.append("\n");
				sbInfo.append("Dist: ").append(dist.agentPosition.toString())
						.append("\n");
				sbInfo.append("2D Dist: ")
						.append(atStart.agentPosition
								.getXYDistanceFrom(now.agentPosition))
						.append("\n");

				sbInfo.append("Rotation\n======\n");
				sbInfo.append("At start: ")
						.append(atStart.agentRotation.toString()).append("\n");
				sbInfo.append("Now: ").append(now.agentRotation.toString())
						.append("\n");
				sbInfo.append("Dist: ").append(dist.agentRotation.toString())
						.append("\n");

				jtaSimInfo.setText(sbInfo.toString());
			}
		});
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * sk.fiit.testframework.trainer.testsuite.ITestCaseObserver#testFinished
	 * (sk.fiit.testframework.trainer.testsuite.TestCaseResult)
	 */
	@Override
	public void testFinished(TestCaseResult result) {
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * sk.fiit.testframework.monitor.ui.UserInterface#shoudExitOnEmptyQueue()
	 */
	@Override
	public boolean shoudExitOnEmptyQueue() {
		return false;
	}

}
