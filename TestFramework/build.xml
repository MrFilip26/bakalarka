<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="compile-TestFramework" name="TestFramework">
	<property name="RoboCupLibrary.location" value="../RoboCupLibrary"/>
	<property name="Jim.location" value="../Jim"/>
	<property name="debuglevel" value="source,lines,vars"/>
	<property name="bin" value="bin" />

	<path id="Persisted container [org.dyno.visual.swing.VS_LIBRARY/layoutext for project [TestFramework]].libraryclasspath"/>

	<path id="RoboCupLibrary.classpath">
		<pathelement location="${RoboCupLibrary.location}/bin"/>
		<pathelement location="${RoboCupLibrary.location}/lib/bsf.jar"/>
		<pathelement location="${RoboCupLibrary.location}/lib/junit.jar"/>
		<pathelement location="${RoboCupLibrary.location}/lib/hamcrest-all-1.3.0RC1.jar"/>
	</path>

	<path id="Jim.classpath">
		<pathelement location="${Jim.location}/bin"/>
		<pathelement location="${Jim.location}/lib/bsf.jar"/>
		<pathelement location="${Jim.location}/lib/jruby-complete-1.4.0.jar"/>
		<pathelement location="${Jim.location}/lib/commons-logging-1.1.jar"/>
		<pathelement location="${Jim.location}/lib/junit.jar"/>
		<pathelement location="${Jim.location}/lib/hamcrest-all-1.3.0RC1.jar"/>
		<pathelement location="${Jim.location}/lib/mockito-all-1.8.5.jar"/>
		<pathelement location="${Jim.location}/lib/commons-net-2.2.jar"/>
		<path refid="AspectJ Runtime Library.libraryclasspath"/>
		<path refid="RoboCupLibrary.classpath"/>
	</path>

	<path id="TestFramework.classpath">
		<pathelement location="bin"/>
		<pathelement location="lib/junit.jar"/>
		<pathelement location="lib/hamcrest-all-1.3.0RC1.jar"/>
		<pathelement location="lib/commons-net-2.2.jar"/>
		<pathelement location="lib/mpj.jar"/>
		<path refid="Persisted container [org.dyno.visual.swing.VS_LIBRARY/layoutext for project [TestFramework]].libraryclasspath"/>
		<path refid="RoboCupLibrary.classpath"/>
		<path refid="Jim.classpath"/>
	</path>

	<target name="init">
		<mkdir dir="${bin}"/>
		<copy includeemptydirs="false" todir="${bin}">
			<fileset dir="src">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
	</target>

	<target name="clean">
		<delete dir="${bin}"/>
	</target>

	<target depends="clean" name="cleanall">
		<ant antfile="build.xml" dir="${RoboCupLibrary.location}" inheritAll="false" target="clean"/>
		<ant antfile="build.xml" dir="${Jim.location}" inheritAll="false" target="clean"/>
	</target>

	<target name="compile-TestFramework" depends="compile-subprojects,compile-project" />

	<target name="compile-subprojects">
		<ant antfile="build.xml" dir="${RoboCupLibrary.location}" inheritAll="false" target="compile-project">
			<propertyset>
				<propertyref name="build.compiler"/>
			</propertyset>
		</ant>
		<ant antfile="build.xml" dir="${Jim.location}" inheritAll="false" target="compile-project">
			<propertyset>
				<propertyref name="build.compiler"/>
			</propertyset>
		</ant>
	</target>

	<target name="compile-project" depends="init">
		<echo message="${ant.project.name}: ${ant.file}"/>
		<javac debug="true" debuglevel="${debuglevel}" destdir="${bin}" includeantruntime="false">
			<src path="src"/>
			<classpath refid="TestFramework.classpath"/>
		</javac>
	</target>

	<target name="compile-refprojects" description="Build all projects which reference this project. Useful to propagate changes."/>

	<target name="Agent-TestFramework" depends="compile-TestFramework">
		<java classname="sk.fiit.testframework.init.Init" failonerror="true" fork="yes">
			<classpath refid="TestFramework.classpath"/>
		</java>
	</target>
</project>
