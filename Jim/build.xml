<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project name="Jim" basedir="." default="build-Jar">
	<property name="TestFramework.location" value="../TestFramework" />
	<property name="RoboCupLibrary.location" value="../RoboCupLibrary" />
	<property name="Jim.location" value="." />
	<property name="debuglevel" value="source,lines,vars" />
	<property name="bin" value="${Jim.location}/bin" />
	<property name="release" value="${Jim.location}/release" />
	<property name="lib" value="${Jim.location}/lib" />
	<property name="reports.tests" value="${Jim.location}/tests" />
	<property name="src" value="${Jim.location}/src" />
	<property name="ClassName" value="sk.fiit.jim.garbage.build.ReleaseBuilder" />
	<property name="JDK1.7.dir" location="C:\java\jdk1.7" />
	<property name="javac1.7" location="${JDK1.7.dir}/bin/javac" />


	<path id="RoboCupLibrary.classpath">
		<pathelement location="${RoboCupLibrary.location}/bin" />
		<pathelement location="${RoboCupLibrary.location}/lib/bsf.jar" />
		<pathelement location="${RoboCupLibrary.location}/lib/junit.jar" />
		<pathelement location="${RoboCupLibrary.location}/lib/hamcrest-all-1.3.0RC1.jar" />
		<pathelement location="${RoboCupLibrary.location}/lib/jeval.jar" />
	</path>

	<path id="Jim.classpath">
		<pathelement location="${Jim.location}/bin" />
		<pathelement location="${Jim.location}/lib/bsf.jar" />
		<pathelement location="${Jim.location}/lib/commons-logging-1.1.jar" />
		<pathelement location="${Jim.location}/lib/commons-net-2.2.jar" />
		<pathelement location="${Jim.location}/lib/google-collections-0.9.jar" />
		<pathelement location="${Jim.location}/lib/hamcrest-all-1.3.0RC1.jar" />
		<pathelement location="${Jim.location}/lib/javassist-2.6.jar" />
		<pathelement location="${Jim.location}/lib/jeval.jar" />
		<pathelement location="${Jim.location}/lib/junit.jar" />
		<pathelement location="${Jim.location}/lib/mockito-all-1.8.5.jar" />
		<pathelement location="${Jim.location}/lib/reflections-0.9.9-RC1.jar" />
		<path refid="RoboCupLibrary.classpath" />
	</path>

	<path id="dep.runtime">
		<fileset dir="./lib">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<target name="test">
		<echo>test</echo>
	</target>

	<target name="compile-Jim" depends="compile-subprojects,compile-project" />

	<target name="init">
		<mkdir dir="${bin}" />
		<mkdir dir="${release}" />
		<copy todir="${bin}">
			<fileset dir="${src}">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<target name="clean">
		<delete dir="${bin}" />
		<delete dir="${release}" />
	</target>

	<target name="cleanall" depends="clean">
		<ant antfile="build.xml" dir="${RoboCupLibrary.location}" inheritAll="false" target="clean" />
	</target>

	<target name="compile-subprojects">
		<ant antfile="build.xml" dir="${RoboCupLibrary.location}" inheritAll="false" target="build-RoboCupLibrary">
			<propertyset>
				<propertyref name="build.compiler" />
			</propertyset>
		</ant>
	</target>

	<target name="compile-project" depends="init">
		<echo message="${ant.project.name}: ${ant.file}" />
		<javac executable="${javac1.7}" debug="true" debuglevel="${debuglevel}" excludes="sk/fiit/jim/tests/**" destdir="${Jim.location}/bin" includeantruntime="true">
			<src path="${src}" />
			<classpath refid="Jim.classpath" />
		</javac>
	</target>
	
	<target name="compile-refprojects" description="Build all projects which reference this project. Useful to propagate changes.">
		<ant antfile="build.xml" dir="${TestFramework.location}" inheritAll="false" target="clean" />
		<ant antfile="build.xml" dir="${TestFramework.location}" inheritAll="false" target="build">
			<propertyset>
				<propertyref name="build.compiler" />
			</propertyset>
		</ant>
	</target>

	<target name="build-Jar" depends="cleanall,compile-Jim">
		<copy todir="${lib}">
			<fileset dir="${RoboCupLibrary.location}/release" />
		</copy>
		<mkdir dir="${release}/moves"/>
		<copy todir="${release}/moves">
			<fileset dir="${Jim.location}/moves" />
		</copy>
		<copy todir="${release}/${lib}">
			<fileset dir="${lib}" />
		</copy>
		<manifestclasspath property="manifest_cp" jarfile="test.jar">
			<classpath refid="dep.runtime" />
		</manifestclasspath>
		<jar destfile="${release}/jim.jar" basedir="${bin}">
			<manifest>
				<attribute name="Main-Class" value="sk.fiit.jim.init.Main" />
				<attribute name="Class-Path" value="${manifest_cp}" />
			</manifest>
			<fileset dir="${bin}" includes="${bin}" />
		</jar>
	</target>


	<target name="unit-tests" depends="compile-project-test">

		<mkdir dir="${reports.tests}" />

		<junit printsummary="yes" haltonfailure="false">
			<classpath>
				<pathelement location="${bin}" />
				<path refid="Jim.classpath" />
			</classpath>

			<formatter type="xml" />
			<formatter type="plain" />

			<batchtest fork="yes" todir="${reports.tests}">
				<fileset dir="${src}" includes="**/*Test.java" />
			</batchtest>
		</junit>
	</target>
	
	<target name="compile-project-test" depends="init">
			<echo message="${ant.project.name}: ${ant.file}" />
			<javac executable="${javac1.7}" debug="true" debuglevel="${debuglevel}" destdir="${Jim.location}/bin" includeantruntime="false">
				<src path="${src}" />
				<classpath refid="Jim.classpath" />
			</javac>
		</target>

</project>
